[{"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reportWebVitals.ts":"1","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Request.ts":"2","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/Request.tsx":"3","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Refferals.ts":"4","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/SendReport.ts":"5","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/NewNote.ts":"6","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/Page.tsx":"7","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/AddQuoteNote.tsx":"8","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/DeleteConfirm.tsx":"9","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Global.ts":"10","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/UserReducer.ts":"11","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/RequestedUsers.tsx":"12","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/ApprovedQuote.tsx":"13","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/SendQuoteReport.ts":"14","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/EditClientStats.tsx":"15","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/Refferal.tsx":"16","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/RequestReducerts.ts":"17","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/Clients.tsx":"18","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/RequestedUsers.ts":"19","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/GetUsers.ts":"20","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/utils/ApprovedQuoteID.ts":"21","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Deny.ts":"22","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/SendContract.ts":"23","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/ValidateDeny.tsx":"24","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/DenyQuote.ts":"25","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/App.tsx":"26","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Axios.ts":"27","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Refferal.ts":"28","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/utils/ClientID.ts":"29","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/Loader.tsx":"30","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/EditClientStat.ts":"31","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/AddApprovedQuoteNote.ts":"32","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/ConvertToClientForm.tsx":"33","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/FilesPreview.tsx":"34","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/index.tsx":"35","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/GetApprovedQuotes.ts":"36","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Approve.ts":"37","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/ConvertToClient.ts":"38","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/Navigation.tsx":"39","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/RefferalReducer.ts":"40","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/utils/UserID.ts":"41","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/SendReport.tsx":"42","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/DenyRefferal.tsx":"43","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/ApprovedQuoteReducer.ts":"44","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/Client.tsx":"45","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/ApproveRefferal.tsx":"46","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/IDReducer.ts":"47","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/Error.tsx":"48","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/ValidateApprove.tsx":"49"},{"size":425,"mtime":1615057819936,"results":"50","hashOfConfig":"51"},{"size":675,"mtime":1615057819928,"results":"52","hashOfConfig":"51"},{"size":13002,"mtime":1615057819936,"results":"53","hashOfConfig":"51"},{"size":539,"mtime":1615057819928,"results":"54","hashOfConfig":"51"},{"size":617,"mtime":1615057819928,"results":"55","hashOfConfig":"51"},{"size":922,"mtime":1615057819928,"results":"56","hashOfConfig":"51"},{"size":648,"mtime":1615057819928,"results":"57","hashOfConfig":"51"},{"size":2242,"mtime":1615057819928,"results":"58","hashOfConfig":"51"},{"size":1296,"mtime":1615057819928,"results":"59","hashOfConfig":"51"},{"size":1902,"mtime":1615057819928,"results":"60","hashOfConfig":"51"},{"size":295,"mtime":1615057819936,"results":"61","hashOfConfig":"51"},{"size":4707,"mtime":1615057819936,"results":"62","hashOfConfig":"51"},{"size":22183,"mtime":1615644176211,"results":"63","hashOfConfig":"51"},{"size":839,"mtime":1615057819928,"results":"64","hashOfConfig":"51"},{"size":4502,"mtime":1615057819928,"results":"65","hashOfConfig":"51"},{"size":24974,"mtime":1615644209539,"results":"66","hashOfConfig":"51"},{"size":383,"mtime":1615057819936,"results":"67","hashOfConfig":"51"},{"size":5126,"mtime":1615057819932,"results":"68","hashOfConfig":"51"},{"size":554,"mtime":1615057819928,"results":"69","hashOfConfig":"51"},{"size":537,"mtime":1615057819928,"results":"70","hashOfConfig":"51"},{"size":217,"mtime":1615057819936,"results":"71","hashOfConfig":"51"},{"size":845,"mtime":1615057819928,"results":"72","hashOfConfig":"51"},{"size":666,"mtime":1615057819928,"results":"73","hashOfConfig":"51"},{"size":1480,"mtime":1615057819928,"results":"74","hashOfConfig":"51"},{"size":901,"mtime":1615057819928,"results":"75","hashOfConfig":"51"},{"size":1309,"mtime":1615057819924,"results":"76","hashOfConfig":"51"},{"size":127,"mtime":1615644159099,"results":"77","hashOfConfig":"51"},{"size":660,"mtime":1615057819928,"results":"78","hashOfConfig":"51"},{"size":202,"mtime":1615057819936,"results":"79","hashOfConfig":"51"},{"size":533,"mtime":1615057819928,"results":"80","hashOfConfig":"51"},{"size":1020,"mtime":1615057819928,"results":"81","hashOfConfig":"51"},{"size":984,"mtime":1615057819928,"results":"82","hashOfConfig":"51"},{"size":3236,"mtime":1615057819928,"results":"83","hashOfConfig":"51"},{"size":3303,"mtime":1615644135308,"results":"84","hashOfConfig":"51"},{"size":1213,"mtime":1615057819932,"results":"85","hashOfConfig":"51"},{"size":549,"mtime":1615057819928,"results":"86","hashOfConfig":"51"},{"size":847,"mtime":1615057819928,"results":"87","hashOfConfig":"51"},{"size":1223,"mtime":1615643609317,"results":"88","hashOfConfig":"51"},{"size":2972,"mtime":1615057819928,"results":"89","hashOfConfig":"51"},{"size":299,"mtime":1615057819936,"results":"90","hashOfConfig":"51"},{"size":197,"mtime":1615057819936,"results":"91","hashOfConfig":"51"},{"size":2182,"mtime":1615057819928,"results":"92","hashOfConfig":"51"},{"size":1663,"mtime":1615057819928,"results":"93","hashOfConfig":"51"},{"size":303,"mtime":1615057819936,"results":"94","hashOfConfig":"51"},{"size":21372,"mtime":1615644192843,"results":"95","hashOfConfig":"51"},{"size":1709,"mtime":1615057819928,"results":"96","hashOfConfig":"51"},{"size":292,"mtime":1615057819936,"results":"97","hashOfConfig":"51"},{"size":470,"mtime":1615057819928,"results":"98","hashOfConfig":"51"},{"size":1518,"mtime":1615057819928,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nezewi",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reportWebVitals.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Request.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/Request.tsx",["203"],"import React,{ useState, useEffect } from \"react\";\nimport \"../layout/Request.css\";\nimport Page from \"../components/Page\";\nimport { Card, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { loadRequestData } from \"../global/Request\";\nimport { connect } from \"react-redux\";\nimport approve from \"../global/Approve\";\nimport ValidateApprove from \"../components/ValidateApprove\";\nimport deny from \"../global/Deny\";\nimport ValidateDeny from \"../components/ValidateDeny\";\nimport Loading from \"../components/Loader\";\nimport Error from \"../components/Error\";\nimport SendReport from \"../components/SendReport\";\nimport sendUserReport from \"../global/SendReport\";\nimport { RequestProps } from \"../@types/request\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ntype RequestComponentProps = RouteComponentProps & StateProps;\n\nconst Request:React.FC<RequestComponentProps> = ({ request, id, history }) =>{\n    const [confirm, setConfirm] = useState(false);\n    const [confirmDeny, setConfirmDeny] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [denyNote, setDenyNote] = useState(\"\");\n    const [approveNote, setApproveNote] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showError, setShowError] = useState(false);\n    const [sendReport, setSendReport] = useState(false);\n    const [sendNote, setSendNote] = useState(\"\");\n    const [emailTo, setEmailTo] = useState(\"\");\n    const loadRequest = async() =>{\n        try {\n            const res = await loadRequestData(id);\n            if(!res.success) {\n                setError(res?.error as string);\n                setShowError(true);\n                setLoading(false)\n            } else {\n                setRequestData(res.data);\n                setLoading(false)\n            }\n        } catch(err) {\n            setError(\"An Error Has Occured Please Try Again Later\")\n            setShowError(true)\n            setLoading(false)\n        }\n    }\n    const approveRequest = async() =>{\n        setLoading(true)\n        try {\n            const res = await approve(id, approveNote);\n            if(!res.success) {\n                setError(res?.error as string)\n                setShowError(true)\n                setLoading(false)\n            } else {\n                setLoading(false)\n                history.push(\"/\")\n                return res;\n            }\n        } catch(err) {\n            setError(\"An Error Has Occured Please Try Again\")\n            setShowError(true)\n            setLoading(false)\n        }\n    }\n    const denyRequest = async() =>{\n        setLoading(true)\n        try {\n            const res = await deny(id, denyNote);\n            if(!res.success) {\n                setError(res?.error as string)\n                setShowError(true)\n                setLoading(false)\n            } else {\n                setLoading(false)\n                history.push(\"/\")\n                return res;\n            }\n        } catch(err) {\n            setError(\"An Error Has Occured Please Try Again\")\n        }\n    }\n    const handleSendReport = async() =>{\n        const report = {\n            firstName: requestData?.firstName,\n            lastName: requestData?.lastName,\n            phoneNumber: requestData?.phoneNumber,\n            email: requestData?.email,\n            streetAdress: requestData?.streetAdress,\n            city: requestData?.city,\n            state: requestData?.state,\n            occupation: requestData?.occupation,\n            HowDidYouHearAboutUs: requestData?.HowDidYouHearAboutUs,\n            AreYouCurrentlyHelpingClientsWithHighScoresObtainFunding: requestData?.AreYouCurrentlyHelpingClientsWithHighScoresObtainFunding,\n            HowMuchFundingCanYouLaveragePerMonth: requestData?.HowMuchFundingCanYouLaveragePerMonth,\n            HaveYouExcellentHighClientsToReferNow: requestData?.HaveYouExcellentHighClientsToReferNow,\n            toEmail: emailTo,\n            note: sendNote\n        }\n        const res = await sendUserReport(report)\n        if(!res.success) {\n            setError(res.error as string)\n            setShowError(true)\n        } else {\n            setSendReport(false)\n            setEmailTo(\"\");\n            setSendNote(\"\");\n            return res;\n        }\n    }\n    const [requestData, setRequestData] = useState<RequestProps>()\n    const handleBoolean = (value: Boolean):string =>{\n        if(value === true) {\n            return \"Yes\"\n        } else if(value === false) {\n            return \"No\"\n        } else {\n            return \"\"\n        }\n    }\n    useEffect(() =>{\n        loadRequest()\n    },[])\n    return (\n        <Page currentPage=\"RequestedUsers\">\n            {\n                !showError && (\n                    <>\n                        <Card>\n                            <Card.Header>\n                                <h4>Preview Request</h4>\n                            </Card.Header>\n                            <Card.Body>\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>Full Name:</h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control value={`${requestData?.firstName} ${requestData?.lastName}`} disabled />\n                                    </Col>\n                                </Row>\n                                \n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>Phone Number: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={requestData?.phoneNumber as number} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>Email: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={requestData?.email as string} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>Street Adress: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={requestData?.streetAdress as string} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>City: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={requestData?.city as string} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>State: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={requestData?.state as string} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>What is your occupation?: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={requestData?.occupation as string} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>How did you hear about us?: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={requestData?.HowDidYouHearAboutUs as string} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>Are you currently helping clients with 700+ scores obtain funding?: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={handleBoolean(requestData?.AreYouCurrentlyHelpingClientsWithHighScoresObtainFunding || false)} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>How much funding can you laverage per month?: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={requestData?.HowMuchFundingCanYouLaveragePerMonth as number} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"mb-3\">\n                                    <Col sm={5} className=\"text-left\">\n                                        <h6>Have you excellent (+700) clients to refer now ?: </h6>\n                                    </Col>\n                                    <Col sm={7} className=\"text-left\">\n                                        <Form.Control disabled value={handleBoolean(requestData?.HaveYouExcellentHighClientsToReferNow || false)} />\n                                    </Col>\n                                </Row>\n\n                            </Card.Body>\n                            <Card.Footer>\n                                <Button className=\"px-4\" onClick={(() =>setConfirm(true))}>Approve</Button>\n                                <Button className=\"px-4 mx-3\" variant=\"danger\" onClick={() =>setConfirmDeny(true)}>Deny</Button>\n                                <Button className=\"px-4\" variant=\"success\" onClick={() =>setSendReport(true)}>Send</Button>\n                            </Card.Footer>\n                        </Card>\n                        <ValidateApprove \n                            onClick={approveRequest} \n                            open={confirm} \n                            closeFunc={() =>setConfirm(false)} \n                            note={approveNote} \n                            setNote={(e:React.ChangeEvent<HTMLInputElement>) =>setApproveNote(e.target.value)} \n                        />\n                        <ValidateDeny \n                            onClick={denyRequest} \n                            open={confirmDeny} \n                            closeFunc={() =>setConfirmDeny(false)} \n                            note={denyNote} \n                            setNote={(e:React.ChangeEvent<HTMLInputElement>) =>setDenyNote(e.target.value)} \n                        />\n                        <SendReport \n                            emailTo={emailTo} \n                            setEmailTo={(e:React.ChangeEvent<HTMLInputElement>) =>setEmailTo(e.target.value)} \n                            closeFunc={() =>setSendReport(false)} \n                            note={sendNote} \n                            setNote={(e:React.ChangeEvent<HTMLInputElement>) =>setSendNote(e.target.value)} \n                            onClick={handleSendReport} \n                            open={sendReport} \n                        />\n                    </>\n                )\n            }\n            {\n                loading && <Loading />\n            }\n            {\n                showError && <Error error={error} />\n            }\n        </Page>\n    )\n}\n\ninterface StateProps {\n    request: RequestProps,\n    id: String,\n}\n\nfunction mapStateToProps(state: any) {\n    return {\n        request: state.requestReducer,\n        id: state.idReducer\n    }\n}\n\nexport default connect<StateProps, {}, {}>(mapStateToProps)(Request);\n",["204","205"],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Refferals.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/SendReport.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/NewNote.ts",[],["206","207"],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/Page.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/AddQuoteNote.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/DeleteConfirm.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Global.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/UserReducer.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/RequestedUsers.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/ApprovedQuote.tsx",["208"],"import React,{ useState, useEffect } from \"react\";\nimport Page from \"../components/Page\";\nimport { Card, Form, Row, Col, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport SendContract from \"../components/SendContract\";\nimport { sendContract as sendUserContract } from \"../global/SendContract\";\nimport ConvertToClient from \"../components/ConvertToClientForm\";\nimport { convertToClient } from \"../global/ConvertApprovedToClient\";\nimport Loader from \"../components/Loader\";\nimport getApprovedQuote from \"../global/GetApprovedQuote\";\nimport { getID } from \"../utils/ApprovedQuoteID\";\nimport Error from \"../components/Error\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { ApprovedQuoteProps } from \"../@types/approved-quote\";\nimport AddQuoteNote from \"../components/AddQuoteNote\";\nimport addApprovedQuoteNote from \"../global/AddApprovedQuoteNote\";\nimport NotesHistory from \"../components/NotesHistory\";\n\ninterface ApproveQuoteProps extends RouteComponentProps {\n    approvedQuoteData: ApprovedQuoteProps,\n    loadApprovedQuote: any\n\n}\n\nconst ApprovedQuote:React.FC<ApproveQuoteProps> = ({ approvedQuoteData, history, loadApprovedQuote }) =>{\n    const [loadingError, setLoadingError] = useState(\"\");\n    const [showLoadingError, setShowLoadingError] = useState(false);\n    const [showLoader, setShowLoader] = useState(false);\n    const handleApprovedQuoteData = async() =>{\n        if(Object.keys(approvedQuoteData).length === 0) {\n            const res = await getApprovedQuote(getID() || \"\")\n            if(!res.success) {\n                setLoadingError(res.error as string)\n                setShowLoadingError(true)\n                setShowLoader(false)\n            } else {\n                loadApprovedQuote(res.data)\n                setShowLoader(false)\n            }\n        }\n    }\n    useEffect(() =>{\n        handleApprovedQuoteData()\n    }, [])\n    const [sendContract, setSendContract] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [contractType, setContractType] = useState(\"\");\n    const [previewLink, setPreviewLink] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showError, setShowError] = useState(false);\n    const [contract, setContract] = useState<Blob|null>(null);\n    const handleSendContract = async(e:React.FormEvent,titleValue:String, contractTypeValue:String, previewLinkValue:String, ownerID:String) =>{\n        setShowLoader(true)\n        e.preventDefault()\n        // Data Validation\n        if(!titleValue) {\n            setShowLoader(false)\n            setError(\"Contract Title Needs To Be Provided\")\n            setShowError(true)\n            return null\n        } else if(!contractTypeValue) {\n            setShowLoader(false)\n            setError(\"Contract Type Needs To Be Provided\")\n            setShowError(true)\n            return null\n        } else if(!previewLinkValue) {\n            setShowLoader(false)\n            setError(\"Preview Link Needs To Be Provided\")\n            setShowError(true)\n            return null\n        } else if(!ownerID) {\n            setShowLoader(false)\n            setError(\"An Error Has Occured Please Try Again\")\n            setShowError(true)\n            return null\n        }\n\n\n        const data = new FormData()\n        if(titleValue) data.append(\"title\", titleValue as string)\n        if(titleValue) data.append(\"contractType\", contractTypeValue as string)\n        if(titleValue) data.append(\"previewLink\", previewLinkValue as string)\n        if(titleValue) data.append(\"ownerID\", ownerID as string)\n        if(titleValue) data.append(\"file\", contract || \"\")\n\n        const res = await sendUserContract(data);\n        if(!res.success) {\n            setError(res.error as string);\n            setShowError(true);\n            setShowLoader(false)\n        } else {\n            setSendContract(false)\n            history.push(\"/quotes/approved\");\n            setShowLoader(false)\n            return res;\n        }\n    }\n    const [convertToClientForm, setConvertToClientForm] = useState(false);\n    const [approximateQuoteAmount, setApproximateQuoteAmount] = useState(0);\n    const [totalCommission, setTotalCommission] = useState(0);\n    const [commissionCollected, setCommissionCollected] = useState(0);\n    const [note, setNote] = useState(\"\");\n    const handleConvertToClient = async(ownerID: String, id:String, approximateQuoteAmount:Number, totalCommission: Number, commissionCollected:Number, note:String) =>{\n        setShowLoader(true)\n        const res = await convertToClient(ownerID, id, approximateQuoteAmount, totalCommission, commissionCollected, note)\n        if(!res.success) {\n            setError(res.error as string)\n            setShowError(true)\n            setShowLoader(false)\n        } else {\n            setError(\"\")\n            setShowError(false)\n            setShowLoader(false)\n            history.push(\"/quotes/approved\");\n            return res;\n        }\n    }\n    const [showAddNote, setShowAddNote] = useState(false);\n    const [approvedQuoteNote, setApprovedQuoteNote] = useState(\"\");\n    const handleAddNewNote = async() =>{\n        setShowLoader(true)\n        const res = await addApprovedQuoteNote(approvedQuoteData._id, approvedQuoteData.OwnerID, approvedQuoteNote);\n        if(!res.success) {\n            setError(res.error as string)\n            setShowError(true)\n            setShowLoader(false)\n        } else {\n            setError(\"\")\n            setShowError(false)\n            setShowLoader(false)\n            history.push(\"/quotes/approved\");\n        }\n    }\n    const [showNotesHistory, setShowNotesHistory] = useState(false)\n    return (\n        <Page currentPage=\"ApprovedQuotes\">\n            {\n                showLoadingError && <Error error={loadingError} />\n            }\n            {\n                (!showLoadingError && Object.keys(approvedQuoteData).length) && (\n                    <>\n                    <Card>\n                        <Card.Header>\n                            <h4>{approvedQuoteData.OwnerName}</h4>\n                        </Card.Header>\n                        <Card.Body>\n                            <Form>\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>FullName:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={`${approvedQuoteData.FirstName} ${approvedQuoteData.LastName}`} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Desired Amount Of Funding:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.DesiredAmountOfFunding as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Whats Main Purpose Of Fund:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.WhatsMainPurposeOfFund as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Do They Already Have A Business:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.DoTheyAlreadyHaveABusiness as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Date Created:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.DateCreated as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>name Of The Business:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.nameOfTheBusiness as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Adress:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.Adress as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>City:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.City as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>State:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.State as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Zip:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.Zip as number} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>DOB:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.DOBdata as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Phone:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.Phone as number} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Email:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.Email as string} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Income:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={approvedQuoteData.Income as number} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm={5}>\n                                        <h6>Notes:</h6>\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <Form.Control type=\"text\" value={(approvedQuoteData?.Notes?.length) ? approvedQuoteData.Notes[approvedQuoteData.Notes.length - 1].contentValue as string : \"\"} disabled />\n                                    </Col>\n                                </Form.Group>\n\n                                {\n                                    (approvedQuoteData.creditReport) && (\n                                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                            <Form.Label column sm={5}>\n                                                <h6>Uploaded file:</h6>\n                                            </Form.Label>\n                                            <Col sm={7}>\n                                                <a \n                                                    href={`http://localhost:8000/report/download/${approvedQuoteData.creditReport}`} \n                                                    rel=\"noreferrer\" \n                                                    target=\"_blank\"\n                                                >\n                                                    Credit Report Download Link\n                                                </a>\n                                            </Col>\n                                        </Form.Group>\n                                    )\n                                }\n\n                            </Form>\n                        </Card.Body>\n                        <Card.Footer>\n                            <Button \n                                variant=\"primary\" \n                                className=\"mr-2\" \n                                onClick={() =>setConvertToClientForm(true)}\n                            >\n                                Convert To Client\n                            </Button>\n                            <Button\n                                variant=\"primary\"\n                                className=\"mr-2\"\n                                onClick={() =>setShowNotesHistory(true)}\n                            >\n                                See Notes History\n                            </Button>\n                            <Button \n                                variant=\"success\" \n                                onClick={() =>setSendContract(true)}\n                            >\n                                Send Contract\n                            </Button>\n                            <Button\n                                variant=\"success\"\n                                className=\"ml-2\"\n                                onClick={() =>setShowAddNote(true)}\n                            >\n                                Add Note\n                            </Button>\n                        </Card.Footer>\n                    </Card>\n                    {\n                        sendContract && <SendContract \n                                            closeFunc={() =>setSendContract(false)}\n                                            titleValue={title}\n                                            onChangeTitle={(e:React.ChangeEvent<HTMLInputElement>) =>setTitle(e.target.value)} \n                                            onChangeContractType={(e:any) =>setContractType(e.target.value)}\n                                            previewLinkValue={previewLink}\n                                            onChangePreviewLink={(e:React.ChangeEvent<HTMLInputElement>) =>setPreviewLink(e.target.value)}\n                                            onClick={(e:React.FormEvent) =>handleSendContract(e, title, contractType, previewLink, approvedQuoteData.OwnerID)}\n                                            contractUpload={(e:React.ChangeEvent<HTMLInputElement>) =>setContract(e.target.files && e.target.files[0])}\n                                            error={error}\n                                            showError={showError}\n                                        />\n                    }\n                    {\n                        convertToClientForm && <ConvertToClient \n                                                closeFunc={() =>setConvertToClientForm(false)}\n                                                approximateQuoteAmountValue={approximateQuoteAmount}\n                                                onChangeApproxQuote={(e:React.ChangeEvent<HTMLInputElement>) =>{\n                                                    const re = /^[0-9]+$/;\n                                                    if(e.target.value === \"\" || re.test(e.target.value)) {\n                                                        setApproximateQuoteAmount(+e.target.value)\n                                                    }\n                                                }}\n                                                totalCommissionValue={totalCommission}\n                                                onChangeTotalCommission={(e:React.ChangeEvent<HTMLInputElement>) =>{\n                                                    const re = /^[0-9]+$/;\n                                                    if(e.target.value === \"\" || re.test(e.target.value)) {\n                                                        setTotalCommission(+e.target.value)\n                                                    }\n                                                }}\n                                                commissionCollectedValue={commissionCollected}\n                                                onChangeCommissionCollected={(e:React.ChangeEvent<HTMLInputElement>) =>{\n                                                    const re = /^[0-9]+$/;\n                                                    if(e.target.value || re.test(e.target.value)) {\n                                                        setCommissionCollected(+e.target.value)\n                                                    }\n                                                }}\n                                                noteValue={note}\n                                                onChangeNote={(e:React.ChangeEvent<HTMLInputElement>) =>setNote(e.target.value)}\n                                                onClick={() =>handleConvertToClient(approvedQuoteData.OwnerID, approvedQuoteData._id, approximateQuoteAmount, totalCommission, commissionCollected, note)}\n                                                error={error}\n                                                showError={showError}\n                                            />\n                    }\n                    {\n                        showAddNote && <AddQuoteNote \n                                            closeFunc={() =>setShowAddNote(false)}\n                                            onClick={handleAddNewNote}\n                                            error={error}\n                                            showError={showError}\n                                            value={approvedQuoteNote}\n                                            onChange={\n                                                (e:React.ChangeEvent<HTMLInputElement>) =>\n                                                    setApprovedQuoteNote(e.target.value)\n                                            }\n                                        />\n                    }\n                    </>\n                )\n            }\n            {\n                showLoader && <Loader />\n            }\n            {\n                showNotesHistory && <NotesHistory \n                                        closeFunc={() =>setShowNotesHistory(false)}\n                                        notes={approvedQuoteData?.Notes || []}\n                                    />\n            }\n        </Page>\n    )\n}\n\ninterface StateProps {\n    approvedQuoteData: ApprovedQuoteProps\n}\n\nfunction mapStateToProps(state:any) {\n    return {\n        approvedQuoteData: state.ApprovedQuoteReducer\n    }\n}\n\ninterface DispatchProps {\n    loadApprovedQuote: (data: ApprovedQuoteProps) => void\n}\n\nfunction mapDispatchToProps(dispatch:any) {\n    return {\n        loadApprovedQuote: (data:ApprovedQuoteProps) => dispatch({ type: \"STORE_APPROVED_QUOTE\", payload: data })\n    }\n}\n\nexport default connect<StateProps, DispatchProps, {}>(mapStateToProps, mapDispatchToProps)(ApprovedQuote);\n","/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/SendQuoteReport.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/EditClientStats.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/Refferal.tsx",["209"],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/RequestReducerts.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/Clients.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/RequestedUsers.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/GetUsers.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/utils/ApprovedQuoteID.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Deny.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/SendContract.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/ValidateDeny.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/DenyQuote.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/App.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Axios.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Refferal.ts",[],["210","211"],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/utils/ClientID.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/Loader.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/EditClientStat.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/AddApprovedQuoteNote.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/ConvertToClientForm.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/FilesPreview.tsx",["212"],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/index.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/GetApprovedQuotes.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/Approve.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/global/ConvertToClient.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/Navigation.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/RefferalReducer.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/utils/UserID.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/SendReport.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/DenyRefferal.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/ApprovedQuoteReducer.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/pages/Client.tsx",["213"],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/ApproveRefferal.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/reducers/IDReducer.ts",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/Error.tsx",[],"/home/ahmed/Freelancing/Jose/efundingExperts-admin/src/components/ValidateApprove.tsx",[],{"ruleId":"214","severity":1,"message":"215","line":124,"column":7,"nodeType":"216","endLine":124,"endColumn":9,"suggestions":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"218","replacedBy":"222"},{"ruleId":"220","replacedBy":"223"},{"ruleId":"214","severity":1,"message":"224","line":44,"column":8,"nodeType":"216","endLine":44,"endColumn":10,"suggestions":"225"},{"ruleId":"214","severity":1,"message":"226","line":54,"column":7,"nodeType":"216","endLine":54,"endColumn":9,"suggestions":"227"},{"ruleId":"218","replacedBy":"228"},{"ruleId":"220","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":16,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"234","line":133,"column":7,"nodeType":"216","endLine":133,"endColumn":9,"suggestions":"235"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadRequest'. Either include it or remove the dependency array.","ArrayExpression",["236"],"no-native-reassign",["237"],"no-negated-in-lhs",["238"],["237"],["238"],"React Hook useEffect has a missing dependency: 'handleApprovedQuoteData'. Either include it or remove the dependency array.",["239"],"React Hook useEffect has a missing dependency: 'handleRefferalData'. Either include it or remove the dependency array.",["240"],["237"],["238"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'handleClientData'. Either include it or remove the dependency array.",["241"],{"desc":"242","fix":"243"},"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [loadRequest]",{"range":"250","text":"251"},"Update the dependencies array to be: [handleApprovedQuoteData]",{"range":"252","text":"253"},"Update the dependencies array to be: [handleRefferalData]",{"range":"254","text":"255"},"Update the dependencies array to be: [handleClientData]",{"range":"256","text":"257"},[4577,4579],"[loadRequest]",[1894,1896],"[handleApprovedQuoteData]",[2280,2282],"[handleRefferalData]",[5710,5712],"[handleClientData]"]