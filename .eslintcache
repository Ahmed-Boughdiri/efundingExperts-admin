[{"C:\\Jose\\admin\\src\\reportWebVitals.ts":"1","C:\\Jose\\admin\\src\\App.tsx":"2","C:\\Jose\\admin\\src\\pages\\RequestedUsers.tsx":"3","C:\\Jose\\admin\\src\\components\\Page.tsx":"4","C:\\Jose\\admin\\src\\components\\Navigation.tsx":"5","C:\\Jose\\admin\\src\\index.tsx":"6","C:\\Jose\\admin\\src\\global\\RequestedUsers.ts":"7","C:\\Jose\\admin\\src\\global\\Axios.ts":"8","C:\\Jose\\admin\\src\\pages\\Request.tsx":"9","C:\\Jose\\admin\\src\\global\\Request.ts":"10","C:\\Jose\\admin\\src\\reducers\\RequestReducerts.ts":"11","C:\\Jose\\admin\\src\\components\\ValidateApprove.tsx":"12","C:\\Jose\\admin\\src\\global\\Approve.ts":"13","C:\\Jose\\admin\\src\\global\\Deny.ts":"14","C:\\Jose\\admin\\src\\reducers\\IDReducer.ts":"15","C:\\Jose\\admin\\src\\components\\ValidateDeny.tsx":"16","C:\\Jose\\admin\\src\\pages\\NewRefferals.tsx":"17","C:\\Jose\\admin\\src\\global\\Refferals.ts":"18","C:\\Jose\\admin\\src\\pages\\Refferal.tsx":"19","C:\\Jose\\admin\\src\\reducers\\RefferalReducer.ts":"20","C:\\Jose\\admin\\src\\global\\Refferal.ts":"21","C:\\Jose\\admin\\src\\components\\AddQuoteNote.tsx":"22","C:\\Jose\\admin\\src\\components\\ApproveRefferal.tsx":"23","C:\\Jose\\admin\\src\\components\\DenyRefferal.tsx":"24","C:\\Jose\\admin\\src\\global\\DenyQuote.ts":"25","C:\\Jose\\admin\\src\\pages\\Clients.tsx":"26","C:\\Jose\\admin\\src\\components\\ConvertToClientForm.tsx":"27","C:\\Jose\\admin\\src\\global\\ConvertToClient.ts":"28","C:\\Jose\\admin\\src\\global\\GetClients.ts":"29","C:\\Jose\\admin\\src\\reducers\\ClientReducer.ts":"30","C:\\Jose\\admin\\src\\pages\\Client.tsx":"31","C:\\Jose\\admin\\src\\pages\\ApprovedQuotes.tsx":"32","C:\\Jose\\admin\\src\\global\\GetApprovedQuotes.ts":"33","C:\\Jose\\admin\\src\\pages\\ApprovedQuote.tsx":"34","C:\\Jose\\admin\\src\\reducers\\ApprovedQuoteReducer.ts":"35","C:\\Jose\\admin\\src\\global\\ApproveRefferal.ts":"36","C:\\Jose\\admin\\src\\components\\SendContract.tsx":"37","C:\\Jose\\admin\\src\\global\\Global.ts":"38","C:\\Jose\\admin\\src\\global\\SendContract.ts":"39","C:\\Jose\\admin\\src\\global\\ConvertApprovedToClient.ts":"40","C:\\Jose\\admin\\src\\components\\Error.tsx":"41","C:\\Jose\\admin\\src\\components\\SendReport.tsx":"42","C:\\Jose\\admin\\src\\components\\Loader.tsx":"43","C:\\Jose\\admin\\src\\global\\NewNote.ts":"44","C:\\Jose\\admin\\src\\global\\SendReport.ts":"45","C:\\Jose\\admin\\src\\global\\SendQuoteReport.ts":"46","C:\\Jose\\admin\\src\\utils\\ApprovedQuoteID.ts":"47","C:\\Jose\\admin\\src\\global\\GetApprovedQuote.ts":"48","C:\\Jose\\admin\\src\\utils\\RefferalID.ts":"49","C:\\Jose\\admin\\src\\utils\\ClientID.ts":"50","C:\\Jose\\admin\\src\\global\\GetClient.ts":"51","C:\\Jose\\admin\\src\\pages\\Users.tsx":"52","C:\\Jose\\admin\\src\\global\\GetUsers.ts":"53","C:\\Jose\\admin\\src\\pages\\User.tsx":"54","C:\\Jose\\admin\\src\\reducers\\UserReducer.ts":"55","C:\\Jose\\admin\\src\\global\\GetUserData.ts":"56","C:\\Jose\\admin\\src\\global\\DeleteUser.ts":"57","C:\\Jose\\admin\\src\\components\\DeleteConfirm.tsx":"58","C:\\Jose\\admin\\src\\utils\\UserID.ts":"59","C:\\Jose\\admin\\src\\components\\Empty.tsx":"60","C:\\Jose\\admin\\src\\components\\EditClientStats.tsx":"61","C:\\Jose\\admin\\src\\global\\AddApprovedQuoteNote.ts":"62","C:\\Jose\\admin\\src\\global\\AddClientNote.ts":"63"},{"size":425,"mtime":499162500000,"results":"64","hashOfConfig":"65"},{"size":1309,"mtime":1609641096236,"results":"66","hashOfConfig":"65"},{"size":4840,"mtime":1610194522476,"results":"67","hashOfConfig":"65"},{"size":670,"mtime":1610201713660,"results":"68","hashOfConfig":"65"},{"size":3044,"mtime":1610199660783,"results":"69","hashOfConfig":"65"},{"size":1213,"mtime":1609642557432,"results":"70","hashOfConfig":"65"},{"size":573,"mtime":1610201519055,"results":"71","hashOfConfig":"65"},{"size":134,"mtime":1612128841290,"results":"72","hashOfConfig":"65"},{"size":13291,"mtime":1610211733569,"results":"73","hashOfConfig":"65"},{"size":699,"mtime":1610201486345,"results":"74","hashOfConfig":"65"},{"size":397,"mtime":1606250378287,"results":"75","hashOfConfig":"65"},{"size":1558,"mtime":1610200107078,"results":"76","hashOfConfig":"65"},{"size":875,"mtime":1610200443155,"results":"77","hashOfConfig":"65"},{"size":873,"mtime":1610201090289,"results":"78","hashOfConfig":"65"},{"size":304,"mtime":1606298537453,"results":"79","hashOfConfig":"65"},{"size":1520,"mtime":1610201665497,"results":"80","hashOfConfig":"65"},{"size":5583,"mtime":1610192090440,"results":"81","hashOfConfig":"65"},{"size":558,"mtime":1610840834270,"results":"82","hashOfConfig":"65"},{"size":21979,"mtime":1610212987082,"results":"83","hashOfConfig":"65"},{"size":311,"mtime":1606735393480,"results":"84","hashOfConfig":"65"},{"size":683,"mtime":1610840829450,"results":"85","hashOfConfig":"65"},{"size":2313,"mtime":1612295239272,"results":"86","hashOfConfig":"65"},{"size":1747,"mtime":1610199205475,"results":"87","hashOfConfig":"65"},{"size":1707,"mtime":1610199571626,"results":"88","hashOfConfig":"65"},{"size":932,"mtime":1610840777899,"results":"89","hashOfConfig":"65"},{"size":5248,"mtime":1610188902753,"results":"90","hashOfConfig":"65"},{"size":3294,"mtime":1612267327383,"results":"91","hashOfConfig":"65"},{"size":1105,"mtime":1610840763596,"results":"92","hashOfConfig":"65"},{"size":553,"mtime":1610840798861,"results":"93","hashOfConfig":"65"},{"size":308,"mtime":1607375463596,"results":"94","hashOfConfig":"65"},{"size":20684,"mtime":1612399717418,"results":"95","hashOfConfig":"65"},{"size":4787,"mtime":1610188029825,"results":"96","hashOfConfig":"65"},{"size":569,"mtime":1610840786214,"results":"97","hashOfConfig":"65"},{"size":21235,"mtime":1612399742812,"results":"98","hashOfConfig":"65"},{"size":315,"mtime":1607381853063,"results":"99","hashOfConfig":"65"},{"size":964,"mtime":1610840748924,"results":"100","hashOfConfig":"65"},{"size":3192,"mtime":1610211453118,"results":"101","hashOfConfig":"65"},{"size":1967,"mtime":1610201317563,"results":"102","hashOfConfig":"65"},{"size":690,"mtime":1610840842810,"results":"103","hashOfConfig":"65"},{"size":1105,"mtime":1612266364461,"results":"104","hashOfConfig":"65"},{"size":485,"mtime":1610199591748,"results":"105","hashOfConfig":"65"},{"size":2237,"mtime":1610199998394,"results":"106","hashOfConfig":"65"},{"size":559,"mtime":1609102206931,"results":"107","hashOfConfig":"65"},{"size":953,"mtime":1610840823690,"results":"108","hashOfConfig":"65"},{"size":637,"mtime":1610840851645,"results":"109","hashOfConfig":"65"},{"size":867,"mtime":1610840847540,"results":"110","hashOfConfig":"65"},{"size":225,"mtime":1609301527927,"results":"111","hashOfConfig":"65"},{"size":746,"mtime":1610840782165,"results":"112","hashOfConfig":"65"},{"size":230,"mtime":1609119189522,"results":"113","hashOfConfig":"65"},{"size":210,"mtime":1609455842056,"results":"114","hashOfConfig":"65"},{"size":856,"mtime":1610840793117,"results":"115","hashOfConfig":"65"},{"size":5650,"mtime":1610198764641,"results":"116","hashOfConfig":"65"},{"size":555,"mtime":1610201311508,"results":"117","hashOfConfig":"65"},{"size":12957,"mtime":1610198610086,"results":"118","hashOfConfig":"65"},{"size":307,"mtime":1609642515697,"results":"119","hashOfConfig":"65"},{"size":744,"mtime":1610840803256,"results":"120","hashOfConfig":"65"},{"size":752,"mtime":1610840771516,"results":"121","hashOfConfig":"65"},{"size":1333,"mtime":1610199481305,"results":"122","hashOfConfig":"65"},{"size":205,"mtime":1609644240147,"results":"123","hashOfConfig":"65"},{"size":519,"mtime":1610156103686,"results":"124","hashOfConfig":"65"},{"size":4615,"mtime":1612287956805,"results":"125","hashOfConfig":"65"},{"size":1016,"mtime":1612297536986,"results":"126","hashOfConfig":"65"},{"size":1062,"mtime":1612397655230,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1fzrg94",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"164"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Jose\\admin\\src\\reportWebVitals.ts",[],["268","269"],"C:\\Jose\\admin\\src\\App.tsx",[],"C:\\Jose\\admin\\src\\pages\\RequestedUsers.tsx",[],"C:\\Jose\\admin\\src\\components\\Page.tsx",[],"C:\\Jose\\admin\\src\\components\\Navigation.tsx",[],"C:\\Jose\\admin\\src\\index.tsx",[],"C:\\Jose\\admin\\src\\global\\RequestedUsers.ts",[],["270","271"],"C:\\Jose\\admin\\src\\global\\Axios.ts",[],["272","273"],"C:\\Jose\\admin\\src\\pages\\Request.tsx",["274"],"import React,{ useState, useEffect } from \"react\";\r\nimport \"../layout/Request.css\";\r\nimport Page from \"../components/Page\";\r\nimport { Card, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { loadRequestData } from \"../global/Request\";\r\nimport { connect } from \"react-redux\";\r\nimport approve from \"../global/Approve\";\r\nimport ValidateApprove from \"../components/ValidateApprove\";\r\nimport deny from \"../global/Deny\";\r\nimport ValidateDeny from \"../components/ValidateDeny\";\r\nimport Loading from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport SendReport from \"../components/SendReport\";\r\nimport sendUserReport from \"../global/SendReport\";\r\nimport { RequestProps } from \"../@types/request\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\ntype RequestComponentProps = RouteComponentProps & StateProps;\r\n\r\nconst Request:React.FC<RequestComponentProps> = ({ request, id, history }) =>{\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [confirmDeny, setConfirmDeny] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [denyNote, setDenyNote] = useState(\"\");\r\n    const [approveNote, setApproveNote] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [showError, setShowError] = useState(false);\r\n    const [sendReport, setSendReport] = useState(false);\r\n    const [sendNote, setSendNote] = useState(\"\");\r\n    const [emailTo, setEmailTo] = useState(\"\");\r\n    const loadRequest = async() =>{\r\n        try {\r\n            const res = await loadRequestData(id);\r\n            if(!res.success) {\r\n                setError(res?.error as string);\r\n                setShowError(true);\r\n                setLoading(false)\r\n            } else {\r\n                setRequestData(res.data);\r\n                setLoading(false)\r\n            }\r\n        } catch(err) {\r\n            setError(\"An Error Has Occured Please Try Again Later\")\r\n            setShowError(true)\r\n            setLoading(false)\r\n        }\r\n    }\r\n    const approveRequest = async() =>{\r\n        setLoading(true)\r\n        try {\r\n            const res = await approve(id, approveNote);\r\n            if(!res.success) {\r\n                setError(res?.error as string)\r\n                setShowError(true)\r\n                setLoading(false)\r\n            } else {\r\n                setLoading(false)\r\n                history.push(\"/\")\r\n                return res;\r\n            }\r\n        } catch(err) {\r\n            setError(\"An Error Has Occured Please Try Again\")\r\n            setShowError(true)\r\n            setLoading(false)\r\n        }\r\n    }\r\n    const denyRequest = async() =>{\r\n        setLoading(true)\r\n        try {\r\n            const res = await deny(id, denyNote);\r\n            if(!res.success) {\r\n                setError(res?.error as string)\r\n                setShowError(true)\r\n                setLoading(false)\r\n            } else {\r\n                setLoading(false)\r\n                history.push(\"/\")\r\n                return res;\r\n            }\r\n        } catch(err) {\r\n            setError(\"An Error Has Occured Please Try Again\")\r\n        }\r\n    }\r\n    const handleSendReport = async() =>{\r\n        const report = {\r\n            firstName: requestData?.firstName,\r\n            lastName: requestData?.lastName,\r\n            phoneNumber: requestData?.phoneNumber,\r\n            email: requestData?.email,\r\n            streetAdress: requestData?.streetAdress,\r\n            city: requestData?.city,\r\n            state: requestData?.state,\r\n            occupation: requestData?.occupation,\r\n            HowDidYouHearAboutUs: requestData?.HowDidYouHearAboutUs,\r\n            AreYouCurrentlyHelpingClientsWithHighScoresObtainFunding: requestData?.AreYouCurrentlyHelpingClientsWithHighScoresObtainFunding,\r\n            HowMuchFundingCanYouLaveragePerMonth: requestData?.HowMuchFundingCanYouLaveragePerMonth,\r\n            HaveYouExcellentHighClientsToReferNow: requestData?.HaveYouExcellentHighClientsToReferNow,\r\n            toEmail: emailTo,\r\n            note: sendNote\r\n        }\r\n        const res = await sendUserReport(report)\r\n        if(!res.success) {\r\n            setError(res.error as string)\r\n            setShowError(true)\r\n        } else {\r\n            setSendReport(false)\r\n            setEmailTo(\"\");\r\n            setSendNote(\"\");\r\n            return res;\r\n        }\r\n    }\r\n    const [requestData, setRequestData] = useState<RequestProps>()\r\n    const handleBoolean = (value: Boolean):string =>{\r\n        if(value === true) {\r\n            return \"Yes\"\r\n        } else if(value === false) {\r\n            return \"No\"\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n    useEffect(() =>{\r\n        loadRequest()\r\n    },[])\r\n    return (\r\n        <Page currentPage=\"RequestedUsers\">\r\n            {\r\n                !showError && (\r\n                    <>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h4>Preview Request</h4>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>Full Name:</h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control value={`${requestData?.firstName} ${requestData?.lastName}`} disabled />\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>Phone Number: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={requestData?.phoneNumber as number} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>Email: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={requestData?.email as string} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>Street Adress: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={requestData?.streetAdress as string} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>City: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={requestData?.city as string} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>State: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={requestData?.state as string} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>What is your occupation?: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={requestData?.occupation as string} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>How did you hear about us?: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={requestData?.HowDidYouHearAboutUs as string} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>Are you currently helping clients with 700+ scores obtain funding?: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={handleBoolean(requestData?.AreYouCurrentlyHelpingClientsWithHighScoresObtainFunding || false)} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>How much funding can you laverage per month?: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={requestData?.HowMuchFundingCanYouLaveragePerMonth as number} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-3\">\r\n                                    <Col sm={5} className=\"text-left\">\r\n                                        <h6>Have you excellent (+700) clients to refer now ?: </h6>\r\n                                    </Col>\r\n                                    <Col sm={7} className=\"text-left\">\r\n                                        <Form.Control disabled value={handleBoolean(requestData?.HaveYouExcellentHighClientsToReferNow || false)} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <Button className=\"px-4\" onClick={(() =>setConfirm(true))}>Approve</Button>\r\n                                <Button className=\"px-4 mx-3\" variant=\"danger\" onClick={() =>setConfirmDeny(true)}>Deny</Button>\r\n                                <Button className=\"px-4\" variant=\"success\" onClick={() =>setSendReport(true)}>Send</Button>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                        <ValidateApprove \r\n                            onClick={approveRequest} \r\n                            open={confirm} \r\n                            closeFunc={() =>setConfirm(false)} \r\n                            note={approveNote} \r\n                            setNote={(e:React.ChangeEvent<HTMLInputElement>) =>setApproveNote(e.target.value)} \r\n                        />\r\n                        <ValidateDeny \r\n                            onClick={denyRequest} \r\n                            open={confirmDeny} \r\n                            closeFunc={() =>setConfirmDeny(false)} \r\n                            note={denyNote} \r\n                            setNote={(e:React.ChangeEvent<HTMLInputElement>) =>setDenyNote(e.target.value)} \r\n                        />\r\n                        <SendReport \r\n                            emailTo={emailTo} \r\n                            setEmailTo={(e:React.ChangeEvent<HTMLInputElement>) =>setEmailTo(e.target.value)} \r\n                            closeFunc={() =>setSendReport(false)} \r\n                            note={sendNote} \r\n                            setNote={(e:React.ChangeEvent<HTMLInputElement>) =>setSendNote(e.target.value)} \r\n                            onClick={handleSendReport} \r\n                            open={sendReport} \r\n                        />\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                loading && <Loading />\r\n            }\r\n            {\r\n                showError && <Error error={error} />\r\n            }\r\n        </Page>\r\n    )\r\n}\r\n\r\ninterface StateProps {\r\n    request: RequestProps,\r\n    id: String,\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        request: state.requestReducer,\r\n        id: state.idReducer\r\n    }\r\n}\r\n\r\nexport default connect<StateProps, {}, {}>(mapStateToProps)(Request);\r\n","C:\\Jose\\admin\\src\\global\\Request.ts",[],"C:\\Jose\\admin\\src\\reducers\\RequestReducerts.ts",[],"C:\\Jose\\admin\\src\\components\\ValidateApprove.tsx",[],["275","276"],"C:\\Jose\\admin\\src\\global\\Approve.ts",[],"C:\\Jose\\admin\\src\\global\\Deny.ts",[],["277","278"],"C:\\Jose\\admin\\src\\reducers\\IDReducer.ts",[],["279","280"],"C:\\Jose\\admin\\src\\components\\ValidateDeny.tsx",[],"C:\\Jose\\admin\\src\\pages\\NewRefferals.tsx",[],"C:\\Jose\\admin\\src\\global\\Refferals.ts",[],"C:\\Jose\\admin\\src\\pages\\Refferal.tsx",["281"],"C:\\Jose\\admin\\src\\reducers\\RefferalReducer.ts",[],["282","283"],"C:\\Jose\\admin\\src\\global\\Refferal.ts",[],"C:\\Jose\\admin\\src\\components\\AddQuoteNote.tsx",[],"C:\\Jose\\admin\\src\\components\\ApproveRefferal.tsx",[],"C:\\Jose\\admin\\src\\components\\DenyRefferal.tsx",[],"C:\\Jose\\admin\\src\\global\\DenyQuote.ts",[],"C:\\Jose\\admin\\src\\pages\\Clients.tsx",[],"C:\\Jose\\admin\\src\\components\\ConvertToClientForm.tsx",[],"C:\\Jose\\admin\\src\\global\\ConvertToClient.ts",[],"C:\\Jose\\admin\\src\\global\\GetClients.ts",[],"C:\\Jose\\admin\\src\\reducers\\ClientReducer.ts",[],["284","285"],"C:\\Jose\\admin\\src\\pages\\Client.tsx",["286"],"import React,{ useState, useEffect } from \"react\";\r\nimport Page from \"../components/Page\";\r\nimport { Card, Form, Col, Button, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport SendContrcat from \"../components/SendContract\";\r\nimport { sendContract } from \"../global/SendContract\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getID } from \"../utils/ClientID\";\r\nimport getClient from \"../global/GetClient\";\r\nimport Error from \"../components/Error\";\r\nimport { ClientProps } from \"../@types/client\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport EditClientStats from \"../components/EditClientStats\";\r\nimport handleClientEditStatsFunc from \"../global/EditClientStat\";\r\nimport AddClientNote from \"../components/AddQuoteNote\";\r\nimport addClientNote from \"../global/AddClientNote\";\r\n\r\ntype ClientComponentProps = RouteComponentProps & StateProps & DispatchProps\r\n\r\nconst Client:React.FC<ClientComponentProps> = ({ clientData, history, storeClient }) =>{\r\n    const [sendContractForm, setSendContractForm] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [contractType, setContractType] = useState(\"\");\r\n    const [previewLink, setPreviewLink] = useState(\"\");\r\n    const [contract, setContract] = useState<Blob | null>(null)\r\n    const [error, setError] = useState(\"\");\r\n    const [showError, setShowError] = useState(false)\r\n    const [showLoader, setShowLoader] = useState(false);\r\n    const [loadingError, setLoadingError] = useState(\"\");\r\n    const [showLoadingError, setShowLoadingError] = useState(false);\r\n    const handleSendContract = async(e:React.FormEvent, title:String, contractType: String, previewLink:String, ownerID: String) =>{\r\n        setShowLoader(true)\r\n        e.preventDefault()\r\n\r\n        // Data Validation\r\n        if(!title){\r\n            setError(\"Title Value Needs To Be Provided\")\r\n            setShowLoader(false)\r\n            setShowError(true)\r\n            return null\r\n        } else if(!contractType){\r\n            setLoadingError(\"Contract Value Needs To Be Provided\")\r\n            setShowLoader(false)\r\n            setShowLoadingError(true)\r\n            return null\r\n        } else if(!previewLink){\r\n            setLoadingError(\"Preview Link Needs To Be Provided\")\r\n            setShowLoader(false)\r\n            setShowLoadingError(true)\r\n            return null\r\n        } else if(!contract){\r\n            setLoadingError(\"Contract Needs To Be Uploaded\")\r\n            setShowLoader(false)\r\n            setShowLoadingError(true)\r\n            return null\r\n        }\r\n        \r\n        const data = new FormData();\r\n        data.append(\"title\", title as string)\r\n        data.append(\"contractType\", contractType as string)\r\n        data.append(\"previewLink\", previewLink as string)\r\n        data.append(\"file\", contract)\r\n        data.append(\"ownerID\", clientData.OwnerID as string)\r\n\r\n        const res = await sendContract(data);\r\n        if(!res.success) {\r\n            setError(res.error as string)\r\n            setShowError(false)\r\n            setShowLoader(false)\r\n        } else {\r\n            setShowLoader(false)\r\n            setSendContractForm(false)\r\n            return res;\r\n        }\r\n    }\r\n    const handleClientData = async() =>{\r\n        if(Object.keys(clientData).length === 0) {\r\n            setShowLoader(true);\r\n            const res = await getClient(getID() || \"\");\r\n            if(!res.success) {\r\n                setError(res.error as string)\r\n                setShowLoadingError(true)\r\n                setShowError(true);\r\n                setShowLoader(false);\r\n            } else {\r\n                setShowLoadingError(false)\r\n                storeClient(res.data);\r\n                setShowLoader(false);\r\n            }\r\n        }\r\n    }\r\n    const [showEditClientStatsForm, setShowEditClientStatsForm] = useState(false);\r\n    const [clientStatsApproxFundingAmount, setClientStatsApproxFundingAmount] = useState(clientData.ApproxQuoteAmount);\r\n    const [clientStatsTotalCommision, setClientStatsTotalCommision] = useState(clientData.TotalCommissions);\r\n    const [clientStatsCommisionCollected, setClientStatsCommisionCollected] = useState(clientData.CommissionsCollected);\r\n    const [clientStatsNote, setClientStatsNote] = useState(\"\");\r\n    const handleClientEditStats = async() =>{\r\n        setShowLoader(true)\r\n        const data:any = {};\r\n        if(clientStatsApproxFundingAmount !== 0) data.ApproxQuoteAmount = clientStatsApproxFundingAmount;\r\n        if(clientStatsTotalCommision !== 0) data.TotalCommision = clientStatsTotalCommision;\r\n        if(clientStatsCommisionCollected !== 0) data.CommisionCollected = clientStatsCommisionCollected;\r\n        if(clientStatsNote.length) data.Notes = clientStatsNote;\r\n        const res = await handleClientEditStatsFunc(clientData.OwnerID, clientData._id, data, clientData.Email);\r\n        if(!res.success) {\r\n            setError(res.error as string)\r\n            setShowError(true)\r\n            setShowLoader(false)\r\n        } else {\r\n            setShowLoader(false)\r\n            setError(\"\")\r\n            setShowError(false)\r\n            history.push(\"/clients\")\r\n        }\r\n    }\r\n    const [showAddClientNote, setShowClientNote] = useState(false);\r\n    const [clientNote, setClientNote] = useState(\"\");\r\n    const handleAddClientNote = async() =>{\r\n        setShowLoader(true);\r\n        const res = await addClientNote(clientData.OwnerID, clientData._id, clientData.Email, clientNote);\r\n        if(!res.success) {\r\n            setError(res.error as string)\r\n            setShowError(true)\r\n            setShowLoader(false)\r\n        } else {\r\n            setShowLoader(false)\r\n            history.push(\"/clients\");\r\n        }\r\n    }\r\n    useEffect(() =>{\r\n        handleClientData();\r\n    },[])\r\n    return (\r\n        <Page currentPage=\"Clients\">\r\n            {\r\n                (!showLoadingError && Object.keys(clientData).length) && (\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <h3>{clientData.OwnerName}</h3>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>FullName:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={`${clientData.FirstName} ${clientData.LastName}`} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Adress:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.Adress as string} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>City:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.City as string} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>State:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.State as string} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Zip:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.Zip as number} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>DOB:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.DOBdata as string} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Phone:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.Phone as number} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Email:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.Email as string} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Income:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.Income as number} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Notes:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.Notes as string} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Approximate Quote Amount:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.ApproxQuoteAmount as number} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Total Commissions:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.TotalCommissions as number} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Commissions Collected:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control type=\"text\" value={clientData.CommissionsCollected as number} disabled />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm={5}>\r\n                                        <h6>Uploaded File:</h6>\r\n                                    </Form.Label>\r\n                                    <Col sm={7}>\r\n                                        <a \r\n                                            href={`localhost:8000/report/download/${clientData.creditReport || \"\"}`} \r\n                                            rel=\"noreferrer\" \r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Credit Report Download Link\r\n                                        </a>\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button \r\n                                variant=\"primary\" \r\n                                onClick={() =>setSendContractForm(true)}\r\n                            >\r\n                                Send Contract\r\n                            </Button>\r\n                            <Button \r\n                                variant=\"success\" \r\n                                className=\"ml-2\"\r\n                                onClick={() => setShowEditClientStatsForm(true)}\r\n                            >\r\n                                Edit Stats\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"success\"\r\n                                className=\"ml-2\"\r\n                                onClick={() =>setShowClientNote(true)}\r\n                            >\r\n                                Add Note\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                )\r\n            }\r\n            {\r\n                sendContractForm && <SendContrcat \r\n                                    closeFunc={() =>setSendContractForm(false)}\r\n                                    titleValue={title}\r\n                                    onChangeTitle={(e:React.ChangeEvent<HTMLInputElement>) =>setTitle(e.target.value)}\r\n                                    onChangeContractType={(e:React.ChangeEvent<HTMLInputElement>) =>setContractType(e.target.value)}\r\n                                    previewLinkValue={previewLink}\r\n                                    onChangePreviewLink={(e:React.ChangeEvent<HTMLInputElement>) =>setPreviewLink(e.target.value)}\r\n                                    onClick={(e:React.FormEvent) =>handleSendContract(e, title, contractType, previewLink, clientData.OwnerID)}\r\n                                    contractUpload={(e:React.ChangeEvent<HTMLInputElement>) =>setContract(e.target.files && e.target.files[0])}\r\n                                    error={error}\r\n                                    showError={showError}\r\n                                />\r\n            }\r\n            {\r\n                showEditClientStatsForm && <EditClientStats \r\n                                                closeFunc={() => setShowEditClientStatsForm(false)}\r\n                                                onClick={handleClientEditStats}\r\n                                                approxFundingAmountValue={clientStatsApproxFundingAmount}\r\n                                                totalCommisionValue={clientStatsTotalCommision}\r\n                                                commisionCollectedValue={clientStatsCommisionCollected}\r\n                                                noteValue={clientStatsNote}\r\n                                                onChangeApproxFundingAmountValue={\r\n                                                    (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n                                                        const re = /^[0-9]*$/;\r\n                                                        if(e.target.value === \"\" || re.test(e.target.value)) {\r\n                                                            setClientStatsApproxFundingAmount(+e.target.value)\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                onChangeTotalCommision={\r\n                                                    (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n                                                        const re = /^[0-9]*$/;\r\n                                                        if(e.target.value === \"\" || re.test(e.target.value)) {\r\n                                                            setClientStatsTotalCommision(+e.target.value)\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                onChangeCommisionCollected={\r\n                                                    (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n                                                        const re = /^[0-9]*$/;\r\n                                                        if(e.target.value === \"\" || re.test(e.target.value)) {\r\n                                                            setClientStatsCommisionCollected(+e.target.value)\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                onChangeNote={\r\n                                                    (e:React.ChangeEvent<HTMLInputElement>) =>\r\n                                                        setClientStatsNote(e.target.value)\r\n                                                }\r\n                                                error={error}\r\n                                                showError={showError}\r\n                                            />\r\n            }\r\n            {\r\n                showAddClientNote && <AddClientNote \r\n                                        value={clientNote}\r\n                                        onChange={\r\n                                            (e:React.ChangeEvent<HTMLInputElement>) =>\r\n                                                setClientNote(e.target.value)\r\n                                        }\r\n                                        closeFunc={() =>setShowClientNote(false)}\r\n                                        error={error}\r\n                                        showError={showError}\r\n                                        onClick={handleAddClientNote}\r\n                                    />\r\n            }\r\n            {\r\n                showLoader && <Loader />\r\n            }\r\n            {\r\n                showLoadingError && <Error error={loadingError} />\r\n            }\r\n            {\r\n                showError && <Error error={error} />\r\n            }\r\n        </Page>\r\n    )\r\n}\r\n\r\ninterface StateProps {\r\n    clientData: ClientProps\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return {\r\n        clientData: state.ClientReducer\r\n    }\r\n}\r\n\r\ninterface DispatchProps {\r\n    storeClient: (data: ClientProps) => void\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch:any) {\r\n    return {\r\n        storeClient: (data:ClientProps) => dispatch({ type: \"STORE_CLIENT\", payload: data })\r\n    }\r\n}\r\n\r\nexport default connect<StateProps, DispatchProps, {}>(mapStateToProps, mapDispatchToProps)(Client);\r\n","C:\\Jose\\admin\\src\\pages\\ApprovedQuotes.tsx",[],"C:\\Jose\\admin\\src\\global\\GetApprovedQuotes.ts",[],"C:\\Jose\\admin\\src\\pages\\ApprovedQuote.tsx",["287"],"C:\\Jose\\admin\\src\\reducers\\ApprovedQuoteReducer.ts",[],"C:\\Jose\\admin\\src\\global\\ApproveRefferal.ts",[],"C:\\Jose\\admin\\src\\components\\SendContract.tsx",[],"C:\\Jose\\admin\\src\\global\\Global.ts",[],"C:\\Jose\\admin\\src\\global\\SendContract.ts",[],"C:\\Jose\\admin\\src\\global\\ConvertApprovedToClient.ts",[],"C:\\Jose\\admin\\src\\components\\Error.tsx",[],"C:\\Jose\\admin\\src\\components\\SendReport.tsx",[],"C:\\Jose\\admin\\src\\components\\Loader.tsx",[],"C:\\Jose\\admin\\src\\global\\NewNote.ts",[],"C:\\Jose\\admin\\src\\global\\SendReport.ts",[],"C:\\Jose\\admin\\src\\global\\SendQuoteReport.ts",[],"C:\\Jose\\admin\\src\\utils\\ApprovedQuoteID.ts",[],"C:\\Jose\\admin\\src\\global\\GetApprovedQuote.ts",[],"C:\\Jose\\admin\\src\\utils\\RefferalID.ts",[],"C:\\Jose\\admin\\src\\utils\\ClientID.ts",[],"C:\\Jose\\admin\\src\\global\\GetClient.ts",[],"C:\\Jose\\admin\\src\\pages\\Users.tsx",[],"C:\\Jose\\admin\\src\\global\\GetUsers.ts",[],"C:\\Jose\\admin\\src\\pages\\User.tsx",["288"],"import React,{ useEffect, useState } from \"react\";\r\nimport Page from \"../components/Page\";\r\nimport { Card, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport getUserData from \"../global/GetUserData\";\r\nimport { getID } from \"../utils/UserID\";\r\nimport Error from \"../components/Error\";\r\nimport Loader from \"../components/Loader\";\r\nimport deleteUser from \"../global/DeleteUser\";\r\nimport DeleteConfirm from \"../components/DeleteConfirm\";\r\nimport SendReport from \"../components/SendReport\";\r\nimport sendUserReport from \"../global/SendReport\";\r\nimport { UserProps } from \"../@types/user\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\ntype UserComponentProps = StateProps & DispatchProps & RouteComponentProps;\r\n\r\nconst User:React.FC<UserComponentProps> = ({ userData, storeUser, history }) =>{\r\n    const [loadingError, setLoadingError] = useState(\"\");\r\n    const [showLoadingError, setShowLoadingError] = useState(false);\r\n    const [showLoader, setShowLoader] = useState(false);\r\n    const handleUserData = async() =>{\r\n        if(Object.keys(userData).length === 0) {\r\n            setShowLoader(true)\r\n            const res = await getUserData(getID() || \"\");\r\n            if(!res.success) {\r\n                setLoadingError(res.error as string)\r\n                setShowLoadingError(true)\r\n                setShowLoader(false)\r\n            } else {\r\n                storeUser(res.data);\r\n                setShowLoadingError(false)\r\n                setShowLoader(false);\r\n            }\r\n        }\r\n    }\r\n    const [confirmDelete, setConfirmDelete] = useState(false);\r\n    const [error,setError] = useState(\"\");\r\n    const [showError, setShowError] = useState(false);\r\n    const [sendReport, setSendReport] = useState(false);\r\n    const [sendReportNote, setSendReportNote] = useState(\"\");\r\n    const [sendReportEmail, setSendReportEmail] = useState(\"\");\r\n    const handleDeleteUser = async(id:String) =>{\r\n        setShowLoader(true)\r\n        const res = await deleteUser(id);\r\n        if(!res.success) {\r\n            setError(res.error as string)\r\n            setShowError(true)\r\n            setShowLoader(false);\r\n        } else {\r\n            setShowLoader(false)\r\n            history.push(\"/users\")\r\n            return res;\r\n        }\r\n    }\r\n    const handleSendReport = async() =>{\r\n        setShowLoader(true)\r\n        const report = {\r\n            ...userData,\r\n            toEmail: setSendReportEmail,\r\n            note: sendReportNote\r\n        }\r\n        const res = await sendUserReport(report)\r\n        if(!res.success) {\r\n            setError(res.error as string)\r\n            setShowError(true);\r\n            setShowLoader(false)\r\n        } else {\r\n            history.push(\"/users\")\r\n            setShowLoader(false)\r\n            return res;\r\n        }\r\n    }\r\n    useEffect(() =>{\r\n        handleUserData()\r\n    },[])\r\n    return (\r\n        <Page currentPage=\"Users\">\r\n            {\r\n                showLoadingError && <Error error={loadingError} />\r\n            }\r\n            {\r\n                !showLoadingError && (\r\n                    <>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h4>{`${userData.firstName} ${userData.lastName}`}</h4>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Form>\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>FullName:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={`${userData.firstName} ${userData.lastName}`} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>Phone Number:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.phoneNumber as string} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>Email:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.email as string} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>Street Adress:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.streetAdress as string} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>City:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.city as string} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>State:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.state as string} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>Postal:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.postal as number} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>What's Your Occupation:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.occupation as string} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>How Did You Hear About Us?:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.HowDidYouHearAboutUs as string} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>Are you currently helping clients with 700+ scores obtain funding?:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.AreYouCurrentlyHelpingClientsWithHighScoresObtainFunding ? \"Yes\" : \"No\"} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>How much funding can you laverage per month?:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.HowMuchFundingCanYouLaveragePerMonth as number} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm={5}>\r\n                                            <h6>Have you excellent (+700) clients to refer now ?:</h6>\r\n                                        </Form.Label>\r\n                                        <Col sm={7}>\r\n                                            <Form.Control type=\"text\" value={userData.HaveYouExcellentHighClientsToReferNow ? \"Yes\" : \"No\"} disabled />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <Button variant=\"danger\" onClick={() =>setConfirmDelete(true)}>Delete User</Button>\r\n                                <Button variant=\"success\" className=\"ml-2\" onClick={() =>setSendReport(true)}>Send</Button>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                        {\r\n                            confirmDelete && <DeleteConfirm \r\n                                                closeFunc={() =>setConfirmDelete(false)} \r\n                                                fullName={`${userData.firstName} ${userData.lastName}`} \r\n                                                onClick={() =>handleDeleteUser(userData._id)} \r\n                                                error={error}\r\n                                                showError={showError}\r\n                                            />\r\n                        }\r\n                        {\r\n                            sendReport && <SendReport \r\n                                                open={sendReport} \r\n                                                closeFunc={() =>setSendReport(false)} \r\n                                                note={sendReportNote} \r\n                                                setNote={(e:React.ChangeEvent<HTMLInputElement>) =>setSendReportNote(e.target.value)} \r\n                                                emailTo={sendReportEmail}\r\n                                                setEmailTo={(e:React.ChangeEvent<HTMLInputElement>) =>setSendReportEmail(e.target.value)}\r\n                                                error={error}\r\n                                                showError={showError}\r\n                                                onClick={() =>handleSendReport}\r\n                                            />\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                showLoader && <Loader />\r\n            }\r\n        </Page>\r\n    )\r\n}\r\n\r\ninterface StateProps {\r\n    userData: UserProps;\r\n}\r\n\r\nfunction mapStateToProps(state:any) {\r\n    return {\r\n        userData: state.UserReducer\r\n    }\r\n}\r\n\r\ninterface DispatchProps {\r\n    storeUser: (data: UserProps) => void\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch:any) {\r\n    return {\r\n        storeUser: (data:UserProps) =>dispatch({ type: \"STORE_USER\", payload: data })\r\n    }\r\n}\r\n\r\nexport default connect<StateProps, DispatchProps, {}>(mapStateToProps, mapDispatchToProps)(User);\r\n","C:\\Jose\\admin\\src\\reducers\\UserReducer.ts",[],["289","290"],"C:\\Jose\\admin\\src\\global\\GetUserData.ts",[],"C:\\Jose\\admin\\src\\global\\DeleteUser.ts",[],"C:\\Jose\\admin\\src\\components\\DeleteConfirm.tsx",[],["291","292"],"C:\\Jose\\admin\\src\\utils\\UserID.ts",[],["293","294"],"C:\\Jose\\admin\\src\\components\\Empty.tsx",[],"C:\\Jose\\admin\\src\\components\\EditClientStats.tsx",[],"C:\\Jose\\admin\\src\\global\\AddApprovedQuoteNote.ts",[],"C:\\Jose\\admin\\src\\global\\AddClientNote.ts",[],{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"295","replacedBy":"299"},{"ruleId":"297","replacedBy":"300"},{"ruleId":"295","replacedBy":"301"},{"ruleId":"297","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":124,"column":7,"nodeType":"305","endLine":124,"endColumn":9,"suggestions":"306"},{"ruleId":"295","replacedBy":"307"},{"ruleId":"297","replacedBy":"308"},{"ruleId":"295","replacedBy":"309"},{"ruleId":"297","replacedBy":"310"},{"ruleId":"295","replacedBy":"311"},{"ruleId":"297","replacedBy":"312"},{"ruleId":"303","severity":1,"message":"313","line":46,"column":7,"nodeType":"305","endLine":46,"endColumn":9,"suggestions":"314"},{"ruleId":"295","replacedBy":"315"},{"ruleId":"297","replacedBy":"316"},{"ruleId":"295","replacedBy":"317"},{"ruleId":"297","replacedBy":"318"},{"ruleId":"303","severity":1,"message":"319","line":132,"column":7,"nodeType":"305","endLine":132,"endColumn":9,"suggestions":"320"},{"ruleId":"303","severity":1,"message":"321","line":43,"column":8,"nodeType":"305","endLine":43,"endColumn":10,"suggestions":"322"},{"ruleId":"303","severity":1,"message":"323","line":76,"column":7,"nodeType":"305","endLine":76,"endColumn":9,"suggestions":"324"},{"ruleId":"295","replacedBy":"325"},{"ruleId":"297","replacedBy":"326"},{"ruleId":"295","replacedBy":"327"},{"ruleId":"297","replacedBy":"328"},{"ruleId":"295","replacedBy":"329"},{"ruleId":"297","replacedBy":"330"},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],["331"],["332"],["331"],["332"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadRequest'. Either include it or remove the dependency array.","ArrayExpression",["333"],["331"],["332"],["331"],["332"],["331"],["332"],"React Hook useEffect has a missing dependency: 'handleRefferalData'. Either include it or remove the dependency array.",["334"],["331"],["332"],["331"],["332"],"React Hook useEffect has a missing dependency: 'handleClientData'. Either include it or remove the dependency array.",["335"],"React Hook useEffect has a missing dependency: 'handleApprovedQuoteData'. Either include it or remove the dependency array.",["336"],"React Hook useEffect has a missing dependency: 'handleUserData'. Either include it or remove the dependency array.",["337"],["331"],["332"],["331"],["332"],["331"],["332"],"no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [loadRequest]",{"range":"348","text":"349"},"Update the dependencies array to be: [handleRefferalData]",{"range":"350","text":"351"},"Update the dependencies array to be: [handleClientData]",{"range":"352","text":"353"},"Update the dependencies array to be: [handleApprovedQuoteData]",{"range":"354","text":"355"},"Update the dependencies array to be: [handleUserData]",{"range":"356","text":"357"},[4700,4702],"[loadRequest]",[2074,2076],"[handleRefferalData]",[5786,5788],"[handleClientData]",[1881,1883],"[handleApprovedQuoteData]",[2887,2889],"[handleUserData]"]